name: Databricks CI/CD Pipeline

on:
  push:
    branches: [dev, test, uat, prod]
  pull_request:
    branches: [dev, test, uat, prod]

env:
  DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
  DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

jobs:
  code-quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch default branch
        run: git fetch origin ${{ github.event.repository.default_branch }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 isort pytest databricks-cli

      - name: Run all checks
        run: |
          echo "üöÄ Running all code quality checks..."
          errors=0
          
          # Black formatting check (currently commented out)
          # echo "Running Black..."
          # black --check . || errors=$((errors+1))

          echo "Running flake8..."
          flake8 . || errors=$((errors+1))

          echo "Running isort..."
          isort --check-only . || errors=$((errors+1))

          echo "Running pytest..."
          pytest || errors=$((errors+1))

          if [ "$errors" -ne 0 ]; then
            echo "‚ùå One or more checks failed."
            exit 1
          else
            echo "‚úÖ All checks passed."
          fi

  deploy-dev:
    needs: code-quality-checks
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Databricks CLI
        run: |
          python -m pip install --upgrade pip
          pip install databricks-cli

      - name: Deploy to Databricks (Dev)
        run: |
          echo "üöÄ Deploying to Databricks Dev..."
          databricks workspace import_dir ./notebooks /Repos/your-repo-path --overwrite
